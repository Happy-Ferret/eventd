This file describes the EVENT protocol (EvP),
a generic events dispatching protocol


This protocol can be server on a UNIX stream socket or a TCP connection.
When using TCP, the connection *must* use TLS.


Messages are UTF-8 text which ends at the "\n" character.
Messages starting with a dot (".") are multiple-lines messages and ends with a
single dot on its own line (".\n"). They are referred as "dot messages".
Any error in the pairing should close the connection. Implementations should
send a "BYE Wrong dot message" message in this case.

An implementation must discard unknown messages for compatibility.
Only dot messages require special handling regarding that: an implementation
must match any dot message with its corresponding ending line (".\n") and
ignore it. Nesting is possible and must be handled. Data messages can appear
at any level of nesting.



Data
----

These messages are always nested. However, implementations must gracefully
discard them in the root flow.

.DATA <name>
    This message is followed by the corresponding data.
    Data end with a line containing a single dot (".\n").
    If data contain a line with the first character being dot ("."),
    it has to be replaced by two dots ("..").
    On the other side, two dots ("..") at the beginning of a line
    has to be replaced by a single dot (".").

DATA <name> <data>
    Simple data in one line, up to "\n" (non included).


Event related messages
----------------------

.EVENT <id> <category> <name>
    Inform the server that an event happened
    The id is a UUID.
    The name must contain only the characters
    "A-Za-z0-9-." (without the quotes).
    The category can use the same characters as the name.
    The message may contain data using the corresponding messages.


Connection related messages
---------------------------

SUBSCRIBE [<category>]
.SUBSCRIBE
    Ask the server to send us events.
    The first form ask for either all events or a single category.
    The second form ask for any number of categories (but at least two).
    Must be sent only once.

BYE [<reason>]
    Close the connection.
    The connection is closed immediately and must not be used any more.
    The reason is an human readable reason possibly shown to the user.
    The reason is optional, thus implementations must check for the exact
    "BYE" message as well as the "BYE " prefix.
